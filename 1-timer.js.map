{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('button[data-start]');\nlet chosenDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > new Date()) {\n      startButton.disabled = false;\n      chosenDate = selectedDates[0];\n    } else {\n      startButton.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst timer = {\n  deadline: null,\n  refs: {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n  },\n  intervalId: null,\n  start() {\n    this.intervalId = setInterval(() => {\n      const diff = this.deadline - Date.now();\n      if (diff <= 0) {\n        this.stop();\n        return;\n      }\n\n      const timeComponents = convertMs(diff);\n      this.refs.days.textContent = String(timeComponents.days).padStart(2, '0');\n      this.refs.hours.textContent = String(timeComponents.hours).padStart(\n        2,\n        '0'\n      );\n      this.refs.minutes.textContent = String(timeComponents.minutes).padStart(\n        2,\n        '0'\n      );\n      this.refs.seconds.textContent = String(timeComponents.seconds).padStart(\n        2,\n        '0'\n      );\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalId);\n  },\n};\n\nstartButton.addEventListener('click', () => {\n  timer.deadline = chosenDate;\n  timer.start();\n  startButton.disabled = true;\n});\n"],"names":["startButton","chosenDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","timer","diff","timeComponents"],"mappings":"+IAUA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EAC/D,IAAIC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBH,EAAY,SAAW,GACvBC,EAAaE,EAAc,CAAC,IAE5BH,EAAY,SAAW,GACvBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEJ,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,MAAMC,EAAQ,CACZ,SAAU,KACV,KAAM,CACJ,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACjD,EACD,WAAY,KACZ,OAAQ,CACN,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMC,EAAO,KAAK,SAAW,KAAK,IAAK,EACvC,GAAIA,GAAQ,EAAG,CACb,KAAK,KAAM,EACX,MACR,CAEM,MAAMC,EAAiBR,EAAUO,CAAI,EACrC,KAAK,KAAK,KAAK,YAAc,OAAOC,EAAe,IAAI,EAAE,SAAS,EAAG,GAAG,EACxE,KAAK,KAAK,MAAM,YAAc,OAAOA,EAAe,KAAK,EAAE,SACzD,EACA,GACD,EACD,KAAK,KAAK,QAAQ,YAAc,OAAOA,EAAe,OAAO,EAAE,SAC7D,EACA,GACD,EACD,KAAK,KAAK,QAAQ,YAAc,OAAOA,EAAe,OAAO,EAAE,SAC7D,EACA,GACD,CACF,EAAE,GAAI,CACR,EAED,MAAO,CACL,cAAc,KAAK,UAAU,CAC9B,CACH,EAEAd,EAAY,iBAAiB,QAAS,IAAM,CAC1CY,EAAM,SAAWX,EACjBW,EAAM,MAAO,EACbZ,EAAY,SAAW,EACzB,CAAC"}